name: Continuous Integration

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - main

jobs:
  test:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      matrix:
        include:
          - name: 'check'
            python: '3.11'
            os: 'ubuntu-latest'
          - name: 'py311 (ubuntu)'
            python: '3.11'
            python_arch: 'x64'
            os: 'ubuntu-latest'
          - name: 'py311 (windows)'
            python: '3.11'
            python_arch: 'x64'
            os: 'windows-latest'
          - name: 'py311 (macos)'
            python: '3.11'
            python_arch: 'arm64'
            os: 'macos-latest'
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.merge_commit_sha }}
        fetch-depth: '0'
    - name: Set up Python ${{ matrix.python }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python }}
    - name: Install Poetry
      run: pipx install poetry || pip install poetry
    - name: Install dependencies
      run: poetry install
    - name: Create and set permissions for test directory
      run: |
        chmod 777 ./tests
    - name: Run tests with coverage
      run: |
        poetry run pytest ./tests/ --cov=src --cov-report=xml:./tests/unittests.xml -m "unittest"
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        token: ${{secrets.CODECOV_TOKEN}}
        fail_ci_if_error: true
        flags: unittests
        file: ./tests/unittests.xml
        dry_run: true

  integration_test:
    name: Integration Tests
    if: github.event_name == 'pull_request'
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      matrix:
        include:
          - name: 'check'
            python: '3.11'
            os: 'ubuntu-latest'
          - name: 'py311 (ubuntu)'
            python: '3.11'
            python_arch: 'x64'
            os: 'ubuntu-latest'
          - name: 'py311 (windows)'
            python: '3.11'
            python_arch: 'x64'
            os: 'windows-latest'
          - name: 'py311 (macos)'
            python: '3.11'
            python_arch: 'arm64'
            os: 'macos-latest'
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    - run: pipx install poetry || pip install poetry
    - run: poetry install
    - name: Create and set permissions for test directory
      run: |
        chmod 777 ./tests
    - name: Run integration tests
      run: |
        poetry run pytest ./tests/ --cov=src --cov-report=xml:./tests/integration_tests.xml -m "integration_test"
    - name: Upload coverage to Codecov
      if: success() || failure()
      uses: codecov/codecov-action@v4
      with:
        token: ${{secrets.CODECOV_TOKEN}}
        fail_ci_if_error: true
        flags: integration
        file: ./tests/integration_tests.xml
        dry_run: true